version: '3.8'

services:
  backend:
    build: .
    container_name: backend_app
    restart: always
    env_file: .env-prod
    depends_on:
      - db
    expose:
      - "5000"

  db:
    image: postgis/postgis:15-3.4
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres  
      POSTGRES_PASSWORD: XoGvI0vSeqxsQv6
      POSTGRES_DB: gymnasium
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:alpine
    container_name: nginx_static
    volumes:
      - ./static:/usr/share/nginx/html:ro  # Serve gymnasium.html from here
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8081:8081"
    depends_on:
      - backend

#   nginx:
#     image: nginx:alpine
#     container_name: nginx_proxy
#     depends_on:
#       - flask
#     volumes:
#       - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#       - certbot-etc:/etc/letsencrypt
#       - certbot-var:/var/lib/letsencrypt
#     ports:
#       - "80:80"
#       - "443:443"

#   certbot:
#     image: certbot/certbot
#     container_name: certbot
#     volumes:
#       - certbot-etc:/etc/letsencrypt
#       - certbot-var:/var/lib/letsencrypt
#       - ./nginx:/var/www/certbot
#     entrypoint: "/bin/sh -c"
#     command: >
#       "trap exit TERM;
#       while :; do sleep 6h & wait $${!}; certbot renew; done"

volumes:
  postgres_data:
#   certbot-etc:
#   certbot-var:
